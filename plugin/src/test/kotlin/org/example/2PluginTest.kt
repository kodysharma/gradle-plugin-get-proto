/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.gradle.testfixtures.ProjectBuilder
import org.gradle.testkit.runner.GradleRunner
import org.junit.jupiter.api.BeforeEach
import java.io.File
import kotlin.io.path.createTempDirectory
import kotlin.test.Test
import kotlin.test.assertNotNull

class PluginTest {

    private lateinit var testProjectDir: File
    private lateinit var buildFile: File
    private lateinit var settingsFile: File

    @BeforeEach
    fun setup() {
        // Create a temporary project directory for testing
        testProjectDir = createTempDirectory().toFile()
        buildFile = File(testProjectDir, "build.gradle.kts")
        settingsFile = File(testProjectDir, "settings.gradle.kts")
    }

    @Test fun `plugin registers task`() {
        // Create a test project and apply the plugin
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("io.github.kodysharma.getproto")

        // Verify the result
        assertNotNull(project.tasks.findByName("get-proto"))
    }

    @Test fun `get-proto task prints message`() {

        settingsFile.writeText("""
            rootProject.name = "test-project"
        """.trimIndent())

        buildFile.writeText("""
            plugins {
                id("io.github.kodysharma.getproto")
            }
        """.trimIndent())

        buildFile.appendText("""
            getProto {
                serverHost.set("gupsup-mate.koyeb.app")
                serverPort.set(443)
            }
        """.trimIndent())


        // Create a test project and apply the plugin
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("io.github.kodysharma.getproto")

        val result = GradleRunner.create()
            .withProjectDir(testProjectDir)
            .withPluginClasspath()
            .withArguments(":get-proto")
            .build()


        // Verify the result
        println("result.output: ${result.output}")
    }
}
